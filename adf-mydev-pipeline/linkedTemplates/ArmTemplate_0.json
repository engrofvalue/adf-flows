{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mydev-pipeline"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase2'"
		},
		"LS_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS'"
		},
		"LS_Azure_Sql_DB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Azure_Sql_DB'"
		},
		"ls_storage_inputfolder_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_storage_inputfolder'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfstorage0123.dfs.core.windows.net/"
		},
		"AzureSqlDatabase2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "db-server-0630.database.windows.net"
		},
		"AzureSqlDatabase2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SQL_DB1"
		},
		"AzureSqlDatabase2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminuser"
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfstorage0123.dfs.core.windows.net/"
		},
		"LS_Azure_Sql_DB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "db-server-0630.database.windows.net"
		},
		"LS_Azure_Sql_DB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SQL_DB1"
		},
		"LS_Azure_Sql_DB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminuser"
		},
		"LS_Http_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://drive.usercontent.google.com/u/0/uc?id=1bmmtkc5NLZQ4iU6Qz_7di-juuxA2kT1t&export=download"
		},
		"LS_Rest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in/api/users"
		},
		"LS_Rest_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in/api/users"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in/api/users"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase2_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service for the ADLS",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Azure_Sql_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This linked service connects to the azure sql db",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Azure_Sql_DB_properties_typeProperties_server')]",
					"database": "[parameters('LS_Azure_Sql_DB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Azure_Sql_DB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Azure_Sql_DB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Http')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This linked service connects to the provided url",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_Http_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Rest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_Rest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Rest_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This link service connects to the source rest api",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_Rest_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Rest source",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_storage_inputfolder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_storage_inputfolder_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Generic_CSV_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'), '/', \n        toUpper(formatDateTime(utcNow(), 'MMM')), '/', \n        formatDateTime(utcNow(), 'dd'), '/csv/')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().foldername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Generic_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'), '/', \n        toUpper(formatDateTime(utcNow(), 'MMM')), '/', \n        formatDateTime(utcNow(), 'dd'), '/csv/')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Generic_Json_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'), '/', \n        toUpper(formatDateTime(utcNow(), 'MMM')), '/', \n        formatDateTime(utcNow(), 'dd'), '/json/')",
							"type": "Expression"
						},
						"fileSystem": "output"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Generic_Sql_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_Sql_DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_Sql_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Rest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Rest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Rest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Table_Schema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_Sql_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_Sql_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_binary_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Http",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Http')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_binary_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'), '/', \n        toUpper(formatDateTime(utcNow(), 'MMM')), '/', \n        formatDateTime(utcNow(), 'dd'), '/binary/')",
							"type": "Expression"
						},
						"fileSystem": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Bulk_Copy_Sql_To_Csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline bulk copies data from sql to csv",
				"activities": [
					{
						"name": "Lookup DB Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT table_schema, table_name\nFROM information_schema.tables\nWHERE table_schema = 'sales'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Table_Schema",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup DB Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup DB Tables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy table data to csv",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Generic_Sql_DB",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Generic_CSV_File",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": "ouput",
												"FileName": {
													"value": "@concat(item().table_schema, item().table_name)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Table_Schema')]",
				"[concat(variables('factoryId'), '/datasets/DS_Generic_Sql_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_Generic_CSV_File')]"
			]
		}
	]
}